import streamlit as st
from typing import Dict

st.set_page_config(page_title='Generated Web App', page_icon='🧩', layout='centered')
st.title('Feature Voting Demo')
st.caption('Generated by OPNXT fallback scaffold — extend per your SDD')

if 'features' not in st.session_state:
    st.session_state.features: Dict[str, int] = {}

with st.form('add_feature', clear_on_submit=True):
    name = st.text_input('Propose a feature', placeholder='e.g., Dark mode')
    submitted = st.form_submit_button('Add')
    if submitted and name.strip():
        st.session_state.features.setdefault(name.strip(), 0)
        st.success(f'Added feature: {name.strip()}')

st.subheader('Vote on features')
if not st.session_state.features:
    st.info('No features yet — add one above!')
else:
    for feat, votes in sorted(st.session_state.features.items(), key=lambda kv: kv[1], reverse=True):
        cols = st.columns([6, 1, 1])
        with cols[0]:
            st.write(f'**{feat}** — {votes} votes')
        with cols[1]:
            if st.button('👍', key=f'up_{feat}'):
                st.session_state.features[feat] += 1
        with cols[2]:
            if st.button('🗑️', key=f'del_{feat}'):
                del st.session_state.features[feat]
                st.experimental_rerun()

st.divider()
st.caption('Tip: Wire this to a backend per your SDD (e.g., FastAPI + database).')
