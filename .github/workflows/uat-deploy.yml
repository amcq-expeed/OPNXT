name: Deploy to UAT

on:
  workflow_dispatch:
  push:
    branches:
      - uat

jobs:
  deploy-uat:
    name: Deploy to UAT
    runs-on: [self-hosted, Windows, X64]
    environment:
      name: UAT
    env:
      UAT_HOST: ${{ secrets.UAT_HOST }}
      UAT_USERNAME: ${{ secrets.UAT_USERNAME }}
      UAT_PASSWORD: ${{ secrets.UAT_PASSWORD }}
      UAT_BACKEND_ENV: ${{ secrets.UAT_BACKEND_ENV }}
      UAT_FRONTEND_ENV: ${{ secrets.UAT_FRONTEND_ENV }}
      UAT_FRONTEND_API_BASE_URL: ${{ secrets.UAT_FRONTEND_API_BASE_URL }}
      UAT_FRONTEND_PUBLIC_MODE: ${{ secrets.UAT_FRONTEND_PUBLIC_MODE }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Debug secret lengths
        shell: pwsh
        run: |
          $required = @('UAT_HOST','UAT_USERNAME','UAT_PASSWORD','UAT_BACKEND_ENV','UAT_FRONTEND_ENV')
          foreach ($name in $required) {
            $value = [System.Environment]::GetEnvironmentVariable($name)
            Write-Host "$name length: $($value.Length)"
          }

      - name: Validate deployment secrets
        shell: powershell
        run: |
          $required = @('UAT_HOST','UAT_USERNAME','UAT_PASSWORD','UAT_BACKEND_ENV','UAT_FRONTEND_ENV')
          foreach ($name in $required) {
            $value = [System.Environment]::GetEnvironmentVariable($name)
            if ([string]::IsNullOrWhiteSpace($value)) {
              throw "Missing required secret: $name"
            }
          }

      - name: Deploy to UAT locally
        shell: powershell
        run: |
          $ErrorActionPreference = 'Stop'

          $backendEnvLocal = Join-Path $env:RUNNER_TEMP 'backend.env'
          Set-Content -Path $backendEnvLocal -Value $env:UAT_BACKEND_ENV -NoNewline
          $frontendEnvLocal = Join-Path $env:RUNNER_TEMP 'frontend.env'
          $lines = @(
            "NEXT_PUBLIC_API_BASE_URL=$env:UAT_FRONTEND_API_BASE_URL"
            "NEXT_PUBLIC_PUBLIC_MODE=$env:UAT_FRONTEND_PUBLIC_MODE"
          )
          Set-Content -Path $frontendEnvLocal -Value ($lines -join "`n") -NoNewline

          $scriptPath = Join-Path $env:GITHUB_WORKSPACE 'scripts\deploy-uat.ps1'
          if (-not (Test-Path $scriptPath)) {
            throw "deploy-uat.ps1 not found at $scriptPath"
          }

          & $scriptPath `
            -SourceRoot $env:GITHUB_WORKSPACE `
            -TargetRoot 'C:\opnxt' `
            -BackendEnvPath $backendEnvLocal `
            -FrontendEnvPath $frontendEnvLocal `
            -BackendServiceName 'opnxt-backend' `
            -FrontendServiceName 'opnxt-frontend' `
            -SiteName 'opnxt'

          Remove-Item -Path $backendEnvLocal -ErrorAction SilentlyContinue
          Remove-Item -Path $frontendEnvLocal -ErrorAction SilentlyContinue
